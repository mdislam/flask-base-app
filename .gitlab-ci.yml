stages:
  - code quality
  - test
  - lint images
  - build and publish

quality:
  stage: code quality
  image: python:2.7-slim
  script:
    - pip install pylint --quiet
    - pylint webapp
  allow_failure: true
  only:
    - master

test:
  stage: test
  image: python:2.7-slim
  before_script:
    - pip install -r webapp/requirements.txt
  script:
    - python -m unittest discover webapp/tests --verbose
  only:
    - master

## Load a node.js image, install dockerlint and lint all Dockerfiles
linting:
  stage: lint images
  image: node:4-alpine
  script:
    - npm install -g dockerlint && npm cache clean
    - find ./ -name Dockerfile -exec dockerlint {} \;

build:
  stage: build and publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq python py-pip make
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - make build-images
    - make push-images
  only:
    - master